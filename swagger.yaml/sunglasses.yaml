swagger: "2.0"
info:
  title: Sunglasses API
  description: An API to support the sunglasses store 
  version: "1.0.0"
host: "localhost:3000"
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /brands:
    get:
      summary: List of Brands
      description: |
        This endpoint gives the user the most popular brands
      tags:
        - Brands
      responses:
        200:
          description: An array of brands
          schema:
            type: array
            items:
              $ref: "#/definitions/Brands"
  /products:
    get:
      summary: List of Products in the store
      description: |
        The Products endpoint returns products that the user has searched in the application
      parameters: 
        - name: query
          in: query
          description: Search word provided by user
          required: false
          type: string
      tags:
        - Products
      responses:
        200:
          description: An array of products based on query
          schema: 
            type: array
            items: 
              $ref: '#/definitions/Products'
        404:
          description: Products not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /brands/{id}/products:
    get:
      tags:
        - Brands
      summary: Get products by brand
      description: This endpoint allows you to seach a product which will give you all the products for a given brand
      parameters:
      - name: id
        in: path
        description: Brand id to find products of 
        required: true
        type: string
      responses:
        200:
          description: Array of products in specified brand 
          schema:
            type: array
            items:
              $ref: "#/definitions/Brands"
        404:
          description: Invalid search value
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /login:
    post:
      summary: Enter login
      description: |
        This endpoint allows you enter your username and login in order to shop in the store
      parameters:
        - name: Email
          in: header
          required: true
          description: Email of user 
          type: string
        - name: Password
          in: header 
          required: true 
          description: Password of user
          type: string 
      tags:
        - User
      responses:
        200:
          description: login is successful
          schema: 
            $ref: '#/definitions/User'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        400:
          description: "Invalid Format"
          schema: 
            $ref: '#/definitions/Error'
        401:
          description: Invalid Username or Password
          schema: 
            $ref: '#/definitions/Error'
  /me/cart:
    post:
      summary: Shopping cart
      description: |
        This endpoint allows you to add items to the shopping cart
      parameters:
        - name: token
          in: query
          description: Access Token for User 
          required: true
          type: string
        - in: body
          name: body
          description: The product to add to the cart
          required: true
          schema: 
             $ref: '#/definitions/ProductId'
      tags:
        - Shopping Cart 
      responses:
        200:
          description: Updated shopping cart 
        403: 
          description: Please sign in 
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Shopping cart 
      description: |
        Returns the items that are in the cart 
      parameters:
        - name: token
          in: query
          description: Valid token for user
          required: true
          type: string
      tags:
        - Shopping Cart
      responses:
        200:
          description: Returns shopping cart for user
        403: 
          description: Please Sign in 
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me/cart/:{productId}:
    delete:
      summary: Deleting items in the cart 
      description: |
        Removes a particular item by id 
      parameters:
        - name: token
          in: query
          description: Valid token for user
          required: true
          type: string
        - name: productId
          in: path
          description: The id of the product to be removed
          required: true
          type: string
      tags:
        - Delete
      responses:
        200:
          description: Return shopping cart for user
          schema:
            type: array
            items:
              $ref: '#/definitions/Cart'
        403: 
          description: Token not present 
          schema: 
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: editing quantity of product in the cart 
      description: |
       changing quantities within the cart 
      parameters:
        - name: token
          in: query
          description: Valid token for user
          required: true
          type: string
        - name: productId
          in: path
          description: The id of the product to be removed
          required: true
          type: string
        - in: body
          name: body 
          required: true
          description: new quantity 
          schema: 
            $ref: '#/definitions/ProductId'
      tags:
        - Quantity
      responses:
        200:
          description: Return cart
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Brands:
    type: object
    properties:
      id:
        type: string
        description: >-
          The unique identifier given to the brand
      name:
        type: string
        description: The name of the brand
  Products: 
    type: object 
    properties: 
      id:
        type: string
        description: Identifier for this product 
      categoryId: 
        type: string 
        description: Identifier links to one particular brand
      name: 
        type: string 
        description: Name of item 
      description: 
        type: string 
        description: More information on the item 
      price: 
        type: integer
        description: Price of the item 
      imageUrls: 
        type: array
        items: 
          type: string 
          description: Product image URLs 
  User:
    type: object
    properties:
      username: 
        type: string
        description: Username of the user 
      password: 
        type: string 
        description: Password for the user 
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
  Cart: 
    type: object 
    properties: 
      quantity: 
        type: integer
        format: int32
        description: Quantity of products in cart 
  ProductId: 
    type: object
    properties: 
      productId: 
        type: string
        description: Id of the product being added to the cart
